"""Initial db setup

Revision ID: 91c82fc3d294
Revises: 
Create Date: 2024-10-27 16:45:17.888799

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '91c82fc3d294'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('learning_outcomes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('papers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('module', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('overall_difficulty', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paper_learning_outcomes_association_table',
    sa.Column('paper_id', sa.Integer(), nullable=False),
    sa.Column('learning_outcome_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_outcome_id'], ['learning_outcomes.id'], ),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], ),
    sa.PrimaryKeyConstraint('paper_id', 'learning_outcome_id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_number', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('difficulty', sa.Integer(), nullable=True),
    sa.Column('paper_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('normalised_average_marks', sa.Float(), nullable=False),
    sa.Column('normalised_mean_marks', sa.Float(), nullable=False),
    sa.Column('normalised_median_marks', sa.Float(), nullable=False),
    sa.Column('normalised_min_marks', sa.Float(), nullable=False),
    sa.Column('normalised_max_marks', sa.Float(), nullable=False),
    sa.Column('paper_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic_question_association_table',
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('topic_id', 'question_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('topic_question_association_table')
    op.drop_table('statistics')
    op.drop_table('questions')
    op.drop_table('paper_learning_outcomes_association_table')
    op.drop_table('topics')
    op.drop_table('papers')
    op.drop_table('learning_outcomes')
    # ### end Alembic commands ###
